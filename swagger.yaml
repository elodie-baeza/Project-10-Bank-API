swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /{userId}/transactions:
      get:
        security:
        - Bearer: []
        tags:
        - Transactions
        summary: User transactions history
        description: Returns transactions history of current month
        operationId: getTransactions
        produces:
        - application/json
        parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: userId
          description: Unique user identifiant
          required: true
          type: string
        responses:
          "200":
            description: "successful operation"
            schema:
              type: "object"
              additionalProperties:
                type: "integer"
                format: "int32"
  /user/{userId}/transaction/{transactionId}:
      get:
        security:
        - Bearer: []
        tags:
        - Transactions
        summary: Get transaction by id
        description: Return transaction
        operationId: getTransactionById
        produces:
        - application/json
        parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: userId
          description: Unique identifiant of user
          required: true
          type: string
        - in: path
          name: transactionId
          description: Unique identifiant of transaction
          required: true
          type: string
        responses:
          "200":
            description: "successful operation"
            schema:
              type: "object"
              additionalProperties:
                type: "integer"
                format: "int32"
          "400":
            description: "Invalid transaction supplied"
          "404":
            description: "Transaction not found"
      put:
        security:
          - Bearer: []
        tags:
          - Transactions
        summary: Update an existing transaction
        description: Modify an existing transaction
        operationId: updateTransaction
        produces:
          - "application/xml"
          - "application/json"
        parameters:
          - in: path
            name: userId
            description: Unique user identifiant
            required: true
            type: string
          - in: body
            name: body
            description: Updated transaction
            required: true
            schema:
              $ref: "#/definitions/Transaction"
        responses:
          "400":
            description: "Invalid ID supplied"
          "404":
            description: "Invalid Fields"
          "500":
            description: "Internal Server Error"
      delete:
        security:
          - Bearer: []
        tags:
          - Transactions
        summary: Delete Transaction
        description: Remove a transaction
        operationId: deleteTransaction
        parameters:
          - in: header
            name: Authorization
            description: Attach Bearer JWT token
            required: true
            type: string
          - in: path
            name: userId
            description: Unique user identifiant
            required: true
            type: string
          - in: path
            name: transactionId
            description: Update user profile attributes
            required: true
            type: string
        produces:
          - application/json
        responses:
          '400':
            description: Invalid ID supplied
          '500':
            description: Transaction not found
  /user/{userId}/transaction:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Add new transaction
      description: API for add new transaction
      operationId: addTransaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: userId
          description: Unique user identifiant
          required: true
          type: string
        - in: body
          name: body
          description: Transaction object that needs to be added
          required: true
          schema:
           $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successully
          schema:
            allOf:
              - $ref: '#/definitions/Transaction'
              - type: object
                required:
                  - balance
                properties:
                  balance:
                    type: number
        '400':
          description: Invalid Transaction
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    required:
      - date
      - description
      - amount
      - transaction type
    properties:
      id:
        type: string
        format: uuid
        minLength: 24
        maxLength: 24
      date: 
        type: string
        format: date
        pattern: YYYY-MM-DD
        minLength: 0
        maxLength: 10
      description: 
        type: string
      amount: 
        type: number
      transaction type:
        type: string
        enum: 
        - electronic
      category:
        type: string
        enum:
        - food
      notes:
        type: string